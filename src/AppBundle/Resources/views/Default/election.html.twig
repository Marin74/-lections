{% extends 'base.html.twig' %}

{% block title %}
	{% if election is not null %}
	    {{ election.name }}
    {% else %}
	    {{ parent() }}
    {% endif %}
{% endblock %}

{% block body %}
<div class="container">
	<ol class="breadcrumb">
		<li><a href="{{ url("app_elections") }}">{{ "elections"|trans }}</a></li>
		{% if election is null %}
			<li class="active">{{ "unknown_election"|trans }}</li>
		{% else %}
    		<li class="active">{{ election.name }}</li>
		{% endif %}
	</ol>
	
	{% if previousElection is not null or nextElection is not null %}
		<nav aria-label="">
			<ul class="pager">
				{% if previousElection is not null %}
					<li class="previous"><a href="{{ url("app_election", {"id": previousElection.id, "name": previousElection.urlName}) }}"><span aria-hidden="true">&larr;</span> {{ previousElection.name }}</a></li>
				{% endif %}
				{% if nextElection is not null %}
					<li class="next"><a href="{{ url("app_election", {"id": nextElection.id, "name": nextElection.urlName}) }}">{{ nextElection.name }} <span aria-hidden="true">&rarr;</span></a></li>
				{% endif %}
			</ul>
		</nav>
	{% endif %}
	
	{% if election is null %}
		<h3>{{ "unknown_election"|trans }}</h3>
	{% else %}
    	<h3>{{ election.name }}</h3>
    	
    	{% if election.description is not empty %}
    		<p>{{ election.description }}</p>
    	{% endif %}
		
		{% if resultsDepartment|length > 0 %}
    		<p>
        		<center>
        			<div class="btn-group" role="group" aria-label="">
        				{% for tempRound in election.rounds %}
    						<a type="button" class="btn btn-default {% if tempRound.id == resultsDepartment[0].round.id %}active{% endif %}" href="{{ url("app_election", {"id": election.id, "name": election.urlName, "roundNumber": tempRound.roundNumber}) }}">{{ ("round_"~tempRound.roundNumber)|trans }}</a>
    					{% endfor %}
    				</div>
        		</center>
    		</p>
			
			<div id="mapid" style="height: 300px; margin: 0 auto"></div>
		{% endif %}
    	
    	{% for round in election.rounds %}
    		<hr>
    		<div class="row">
                <div class="col-md-6">
            		
        			<h4>{{ ("round_"~round.roundNumber)|trans }}</h4>
        			
        			{% set resultCountry = round.resultCountry %}
        			
        			{% if resultCountry is not null %}
            			<table class="table table-striped">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>{{ "number"|trans }}</th>
                                </tr>
                            </thead>
                            <tbody>
                            	{% if resultCountry.registered is not null %}
                            		<tr>
                            			<td>{{ "registered"|trans }}</td>
                            			<td>{{ resultCountry.registered|number_format }}</td>
                            		</tr>
                        		{% endif %}
                            	{% if resultCountry.voters is not null %}
                            		<tr>
                            			<td>{{ "voters"|trans }}</td>
                            			<td>
                            				{% if resultCountry.registered is not empty %}
                            			        {{ "percent_and_value"|trans({"%value%": resultCountry.voters|number_format, "%percent%": (resultCountry.voters*100/resultCountry.registered)|number_format(1, null, " ")}) }}
                            			    {% else %}
                            			    	{{ resultCountry.voters|number_format }}
                            			   	{% endif %}
                            			</td>
                            		</tr>
                        		{% endif %}
                            	{% if resultCountry.votesCast is not null %}
                            		<tr>
                            			<td>{{ "votes_cast"|trans }}</td>
                            			<td>{{ resultCountry.votesCast|number_format }}</td>
                            		</tr>
                        		{% endif %}
                            	{% if resultCountry.blankAndInvalidVotes is not null %}
                            		<tr>
                            			<td>{{ "blank_and_invalid_votes"|trans }}</td>
                            			<td>{{ resultCountry.blankAndInvalidVotes|number_format }}</td>
                            		</tr>
                            	{% else %}
                            		{% if resultCountry.blankVotes is not null %}
                                		<tr>
                                			<td>{{ "blank_votes"|trans }}</td>
                                			<td>{{ resultCountry.blankVotes|number_format }}</td>
                                		</tr>
                            		{% endif %}
                                	{% if resultCountry.invalidVotes is not null %}
                                		<tr>
                                			<td>{{ "invalid_votes"|trans }}</td>
                                			<td>{{ resultCountry.invalidVotes|number_format }}</td>
                                		</tr>
                            		{% endif %}
                        		{% endif %}
                            	{% if resultCountry.abstention is not null %}
                            		<tr>
                            			<td>{{ "abstention"|trans }}</td>
                            			<td>
                            				{% if resultCountry.registered is not empty %}
                            			        {{ "percent_and_value"|trans({"%value%": resultCountry.abstention|number_format, "%percent%": (resultCountry.abstention*100/resultCountry.registered)|number_format(1, null, " ")}) }}
                            			    {% else %}
                            			    	{{ resultCountry.abstention|number_format }}
                            			   	{% endif %}
                            			</td>
                            		</tr>
                        		{% endif %}
                            </tbody>
                        </table>
                    	{% if election.type.code == constant("CODE_PRES", election.type) %}
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <td>{{ "candidate"|trans }}</td>
                                        <td>{{ "voices"|trans }}</td>
                                        <td>{{ "percentage"|trans }}</td>
                                    </tr>
                            	</thead>
                                {% if resultCountry.scores.count != 0 %}
                                
                                    {% for score in resultCountry.scores %}
                                    	
                                        {% set strong = false %}
                                        {% set hint = "" %}
                                        
                                        {% if round.roundNumber == 1 and loop.index <= 2 %}
                                            {% set strong = true %}
                                            
                                            {% if (score.voices*100/resultCountry.votesCast) > 50 %}
                                                {% set hint = "elected"|trans %}
                                            {% else %}
            
                                                {% set candidateElected = false %}
            
                                                {% for tempScore in resultCountry.scores %}
                                                    {% if (tempScore.voices*100/resultCountry.votesCast) > 50 %}
                                                        {% set candidateElected = true %}
                                                    {% endif %}
                                                {% endfor %}
            
                                                {% if candidateElected == false %}
                                                    {% set hint = " "~"second_round"|trans %}
                                                {% endif %}
                                            {% endif %}
                                        {% elseif round.roundNumber == 2 and loop.index == 1 %}
                                            {% set strong = true %}
                                            {% set hint = " "~"elected"|trans %}
                                        {% endif %}
                                        <tr>
                                            <td>
                                                {% if strong %}<strong>{% endif %}
                                                    <a href="{{ url("app_candidate", {"id": score.candidacy.candidate.id, "name": score.candidacy.candidate.urlName}) }}">{{ score.candidacy.candidate.name }}</a>
                                                {% if strong %}</strong>{% endif %}
                                                <br/>
                                                <em>{{ score.candidacy.nuance.name }}</em>
                                            </td>
                                            <td>
                                                {% if strong %}<strong>{% endif %}
                                                    {{ score.voices|number_format }}
                                                {% if strong %}</strong>{% endif %}
                                            </td>
                                            <td>
                                                {% if strong %}<strong>{% endif %}
                                                	{% if resultCountry.votesCast != null %}
                                                        {{ (score.voices*100/resultCountry.votesCast)|number_format(2, null, " ") }} %
                                                    {% endif %}
                                                    {{ hint }}
                                                {% if strong %}</strong>{% endif %}
                                            </td>
                                        </tr>
                                    {% endfor %}
                                {% else %}
                                    {% for candidacy in round.candidacies %}
                                        <tr>
                                            <td>
                                                {{ candidacy.candidate.name }}
                                                <br/>
                                                <em>{{ candidacy.nuance.name }}</em>
                                            </td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    {% endfor %}
                                {% endif %}
                        	</table>
                    	
                    	{% elseif election.type.code == constant("CODE_LEG", election.type) and resultCountry.scores.count != 0 %}
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <td>{{ "nuances"|trans }}</td>
                                        <td>{{ "voices"|trans }}</td>
                                        <td>{{ "percentage"|trans }}</td>
                                    </tr>
                            	</thead>
                                
                                {% for score in resultCountry.scores %}
                                	
                                    <tr>
                                        <td>
                                            <a href="{{ url("app_nuance", {"id": score.nuance.id, "name": score.nuance.urlName}) }}">{{ score.nuance.name }}</a>
                                        </td>
                                        <td>
                                            {{ score.voices|number_format }}
                                        </td>
                                        <td>
                                        	{% if resultCountry.votesCast != null %}
                                                {{ (score.voices*100/resultCountry.votesCast)|number_format(2, null, " ") }} %
                                            {% endif %}
                                        </td>
                                    </tr>
                                {% endfor %}
                        	</table>
                        {% endif %}
                    {% endif %}
                </div>
                <div class="col-md-6">
                    {% if round.resultCountry != null
                        and round.resultCountry.scores.count > 0 %}
                        <div id="chartRound{{ loop.index }}" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                    {% endif %}
                </div>
            </div>
        {% endfor %}
    {% endif %}
</div>
{% endblock %}

{% block css %}
{% endblock %}

{% block js %}
<script type="text/javascript">
    {% if election is not null %}

    	{% if resultsDepartment|length > 0 %}
         	// Set map
            var map = L.map('mapid').setView([47.665387356326534, 2.70263671875], 5);
            
            L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={{ mapbox_access_token }}', {
                maxZoom: 18,
                attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                    '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                    'Imagery © <a href="http://mapbox.com">Mapbox</a>',
                id: 'mapbox.light'
            }).addTo(map);
            
            map.attributionControl.addAttribution('{{ "data_copyright"|trans }} <a href="{{ "data_source_website"|trans }}">{{ "data_source_name"|trans }}</a>');
        
            // Prevent the zoom when we scroll the webpage
            map.scrollWheelZoom.disable();
        	
        	
            // Control that shows state info on hover
            var info = L.control();
            
            info.onAdd = function (map) {
        		this._div = L.DomUtil.create('div', 'info');
        		this.update();
        		return this._div;
            };
            
            info.update = function (props) {
            	
        		var name1 = "";
        		var result1 = "";
        		var color1 = "";
        		var name2 = "";
        		var result2 = "";
        		var color2 = "";
        		var area = "";
        		
            	if(props != null) {
        	        {% for result in resultsDepartment %}
                        
            	        {% set departmentCode = result.department.dep %}
                        {% if departmentCode|number_format < 10 and departmentCode != "2A" and departmentCode != "2B" %}
            				{% set departmentCode = "0" ~ departmentCode %}
                        {% endif %}
                        
            			if(props.code == '{{ departmentCode }}') {
            	            {% if result.scores|length > 0 %}
            	                {% if result.votesCast > 0 %}
            	                	
            	                	{% if election.type.code == constant("CODE_PRES", election.type) %}
                						name1 = '{{ result.scores.first.candidacy.candidate.reverseName }}'
                						color1 = "{{ result.scores.first.candidacy.nuance.color }}"
									{% elseif election.type.code == constant("CODE_LEG", election.type) %}
                						name1 = '{{ result.scores.first.nuance.name }}'
                						color1 = "{{ result.scores.first.nuance.color }}"
            						{% else %}
                						name1 = ''
                						color1 = "black"
									{% endif %}
                					
                					result1 = "{{ (result.scores.first.voices*100/result.votesCast)|number_format(2) }}"
        						{% endif %}
                    			
            	                {% if result.scores|length > 1 and result.votesCast > 0 %}

                	                {% if election.type.code == constant("CODE_PRES", election.type) %}
            							name2 = '{{ result.scores[1].candidacy.candidate.reverseName }}'
            							color2 = "{{ result.scores[1].candidacy.nuance.color }}"
        							{% elseif election.type.code == constant("CODE_LEG", election.type) %}
                						name2 = '{{ result.scores[1].nuance.name }}'
            							color2 = "{{ result.scores[1].nuance.color }}"
            						{% else %}
                						name1 = ''
                						color1 = "black"
        							{% endif %}
            	                	
            						result2 = "{{ (result.scores[1].voices*100/result.votesCast)|number_format(2) }}"
            	                {% endif %}
            					area = "{{ result.department.name }}"
            	            {% endif %}
            			}
        	        {% endfor %}
        			this._div.style.color = 'black';
        			this._div.style.backgroundColor = 'grey';
        			this._div.style.padding = '0px 10px 5px 10px';
        			this._div.style.borderRadius = '0.5em';
        			this._div.style.backgroundColor = 'white';
        		}
            	else {
        			this._div.style.backgroundColor = 'transparent';
        		}
        		
        	    {% if resultsDepartment|length != 0 %}
        			this._div.innerHTML = (area ? "<h5>" + area + "</h5>": "") +
        			(props && name1 ?
        			'<strong style="color:' + color1 + ';">' + name1 + '</strong><strong> : ' + result1 + ' %</strong><br />' +
        			'<strong style="color:' + color2 + ';">' + name2 + '</strong> : ' + result2 + ' %'
         			: '&nbsp;');
                {% endif %}
        	};
        	
        	info.addTo(map);
        	
        	
            var district_boundary;
        
            // Set geojson shapes
            $.ajax({
                dataType: "json",
                url: "{{ asset("bundles/app/france-geojson/departements.geojson") }}",
                success: function(data) {
        
                    var multipolygon = L.geoJson(data, {
                        style: style, onEachFeature: onEachFeature
                    });
        
                    district_boundary = multipolygon.addTo(map);
                    map.fitBounds(multipolygon.getBounds());
                }
            });
        
            // Design layout features
            function onEachFeature(feature, layer) {
                layer.on({
                    mouseover: highlightFeature,
                    mouseout: resetHighlight,
                    click: zoomToFeature
                });
            }
        
            function resetHighlight(e) {
                district_boundary.resetStyle(e.target);
                info.update();
            }
        
            function zoomToFeature(e) {
            	var whereToGo = "{{ path("app_election_department_by_code", {"election_id": election.id, "department_code": "XXX", "name": election.urlName}) }}";
                whereToGo = whereToGo.replace("XXX", e.target.feature.properties.code);
                //whereToGo = whereToGo.replace("YYY", e.target.feature.properties.name);
                window.location.href = whereToGo;
            }
        
            function highlightFeature(e) {
                var layer = e.target;
        
                layer.setStyle({
                    weight: 4,
                    color: '#fff',
                    dashArray: '',
                    fillOpacity: 0.7
                });
        
                if (!L.Browser.ie && !L.Browser.opera) {
                    layer.bringToFront();
                }
        
                info.update(layer.feature.properties);
            }
        
            function style(feature) {
        
                return {
                    fillColor: getColor(feature.properties.code),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            }
        
            function getColor(d) {
        
        	    {% for result in resultsDepartment %}
        			if(d == '{{ result.department.dep }}' || d == '0{{ result.department.dep }}') {
        	            {% if result.scores|length > 0 and result.votesCast > 0 %}

            	            {% if election.type.code == constant("CODE_PRES", election.type) %}
                        		return '{{ result.scores.first.candidacy.nuance.color }}';
        					{% elseif election.type.code == constant("CODE_LEG", election.type) %}
                        		return '{{ result.scores.first.nuance.color }}';
                    		{% else %}
                    			return 'black';
                        	{% endif %}
                    {% endif %}
                    }
                {% endfor %}
            	
                {% if resultsDepartment|length != 0 %}
                    return 'white';
                {% endif %}
            	
                return 'grey';
            }
		{% endif %}
		
    	
        {% for round in election.rounds %}
        	{% if round.resultCountry != null %}
                $(function () {
                    // Create the chart
                    $('#chartRound{{ loop.index }}').highcharts({
                        chart: {
                            type: 'pie'
                        },
                        title: {
                            text: '{{ "results"|trans }}'
                        },
                        subtitle: {
                            text: '{{ ("round_"~round.roundNumber)|trans }}'
                        },
            		    exporting: {
							enabled: false
           				},
                        credits: {
                        	enabled: false
                        },
                        plotOptions: {
                            series: {
                                dataLabels: {
                                    enabled: true,
                                    format: '{point.name} : {point.y:.1f} %'
                                }
                            }
                        },
            
                        tooltip: {
                            headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                            pointFormat: '<span style="color:{point.color}">{point.name}</span> : <b>{point.y:.2f}%</b> des voix<br/><span style="font-size:11px"><em>{point.nuance}</em></span><br/>'
                        },
                        series: [{
                            name: '{{ "candidate"|trans }}',
                            colorByPoint: true,
                            data: [
            
                                {% set resultMin = 5 %}
                                {% set smallCandidates = 0 %}
                                {% set totalVoices = 0 %}
                                {% set iScores = 0 %}
            
                                {% for score in round.resultCountry.scores %}

									{% set iScores = iScores + 1 %}
                                    {% set totalVoices = totalVoices + score.voices %}
                                	
                                    {% if (score.voices*100/round.resultCountry.votesCast) >= resultMin or (iScores == round.resultCountry.scores|length and smallCandidates == 0) %}
                                        {
                                        	{% if election.type.code == constant("CODE_PRES", election.type) %}
                                        		color: '{{ score.candidacy.nuance.color }}',
                                                name: '{{ score.candidacy.candidate.name  }}',
                                                nuance: '{{ score.candidacy.nuance.name }}',
                                        	{% elseif election.type.code == constant("CODE_LEG", election.type) %}
                                        		color: '{{ score.nuance.color }}',
                                                name: '{{ score.nuance.name  }}',
                                                nuance: '{{ score.nuance.name }}',
                                    		{% else %}
                                        		color: 'black',
                                        		name: '',
                                                nuance: '',
                                        	{% endif %}
                                        	
                                            y: {{ (score.voices*100/round.resultCountry.votesCast)|number_format(2, null, " ") }},
                                            drilldown: null
                                        },
                                    {% else %}
                                        {% set smallCandidates = smallCandidates + (score.voices*100/round.resultCountry.votesCast) %}
                                    {% endif %}
                                {% endfor %}

                                {% if totalVoices != round.resultCountry.votesCast %}
                                    {
                                    	color: 'grey',
                                        name: '{{ "various"|trans }}',
                                        y: {{ ((round.resultCountry.votesCast - totalVoices)*100/round.resultCountry.votesCast)|number_format(2, null, " ") }},
                                        drilldown: null
                                    },
                                {% endif %}
            
                                {% if smallCandidates != 0 %}
                                    {
                                        {% if election.type.code == constant("CODE_PRES", election.type) %}
                                        	name: '{{ "other_candidates"|trans }}',
                                    	{% elseif election.type.code == constant("CODE_LEG", election.type) %}
                                        	name: '{{ "other_nuances"|trans }}',
                                    	{% endif %}
                                        y: {{ smallCandidates|number_format(2, null, " ") }},
                                        drilldown: 'other'
                                    },
                                {% endif %}
                            ]
                        }],
                        drilldown: {
                            series: [
                                {% if smallCandidates != 0 %}
                                    {
                                        name: '{{ "other_candidates"|trans }}',
                                        id: 'other',
                                        data: [
                                            {% for score in round.resultCountry.scores %}
                                                {% if (score.voices*100/round.resultCountry.votesCast) < resultMin %}
                                                    {
                                                    	{% if election.type.code == constant("CODE_PRES", election.type) %}
                                                    		color: '{{ score.candidacy.nuance.color }}',
                                                            name: '{{ score.candidacy.candidate.name  }}',
                                                            nuance: '{{ score.candidacy.nuance.name }}',
                                                    	{% elseif election.type.code == constant("CODE_LEG", election.type) %}
                                                    		color: '{{ score.nuance.color }}',
                                                            name: '{{ score.nuance.name  }}',
                                                            nuance: '{{ score.nuance.name }}',
                                                		{% else %}
                                                    		color: 'black',
                                                    		name: '',
                                                            nuance: '',
                                                    	{% endif %}
                                                    	
                                                        y: {{ (score.voices*100/round.resultCountry.votesCast)|number_format(2, null, " ") }},
                                                        drilldown: null
                                                    },
                                                {% endif %}
                                            {% endfor %}
                                        ]
                                    },
                                {% endif %}
                            ]
                        }
                    });
                });
			{% endif %}
        {% endfor %}
    {% endif %}
</script>
{% endblock %}